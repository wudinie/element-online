{"version":3,"file":"js/6250.c48803ee.js","mappings":"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","sources":["webpack://element-show/./src/views/login/loginIndex.vue","webpack://element-show/./src/api/login.js","webpack://element-show/src/views/login/loginIndex.vue","webpack://element-show/./src/views/login/loginIndex.vue?5878","webpack://element-show/./src/views/login/loginIndex.vue?3f1a"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('el-container',[_c('el-header',[_c('el-page-header',{attrs:{\"content\":\"登录页面\"},on:{\"back\":function($event){return _vm.$router.go(-1)}}})],1),_c('el-main',[_c('el-card',{staticClass:\"box-card\",attrs:{\"shadow\":\"hover\"}},[_c('div',{staticStyle:{\"line-height\":\"50px\"},attrs:{\"slot\":\"header\"},slot:\"header\"},[_c('h2',[_vm._v(\"手机号登录\")]),_c('span',[_vm._v(\"未注册的手机号登陆后将会自动注册\")])]),_c('div',{staticClass:\"form\"},[_c('el-form',{ref:\"ruleForm\",attrs:{\"label-position\":_vm.labelPosition,\"model\":_vm.formData,\"rules\":_vm.rules,\"label-width\":\"100px\"}},[_c('el-form-item',{attrs:{\"label\":\"手机\",\"prop\":\"mobile\"}},[_c('el-input',{attrs:{\"placeholder\":\"请输入手机号\"},model:{value:(_vm.formData.mobile),callback:function ($$v) {_vm.$set(_vm.formData, \"mobile\", $$v)},expression:\"formData.mobile\"}})],1),_c('el-form-item',{attrs:{\"label\":\"图形验证码\",\"prop\":\"picCode\"}},[_c('el-input',{attrs:{\"placeholder\":\"请输入图形验证码\"},model:{value:(_vm.formData.picCode),callback:function ($$v) {_vm.$set(_vm.formData, \"picCode\", $$v)},expression:\"formData.picCode\"}}),(_vm.formData.picUrl)?_c('el-image',{directives:[{name:\"loading\",rawName:\"v-loading\",value:(_vm.loading),expression:\"loading\"}],staticStyle:{\"width\":\"100px\",\"height\":\"30px\",\"position\":\"absolute\"},attrs:{\"src\":_vm.formData.picUrl},on:{\"click\":_vm.getPicCode}}):_vm._e()],1),_c('el-form-item',{attrs:{\"label\":\"短信验证码\",\"prop\":\"msgCode\"}},[_c('el-input',{attrs:{\"placeholder\":\"请输入短信验证码\"},model:{value:(_vm.formData.msgCode),callback:function ($$v) {_vm.$set(_vm.formData, \"msgCode\", $$v)},expression:\"formData.msgCode\"}}),_c('el-button',{attrs:{\"type\":\"text\",\"disabled\":_vm.code},on:{\"click\":function($event){return _vm.getCode('ruleForm')}}},[_vm._v(_vm._s(_vm.second===_vm.totalSecond?'获取验证码':_vm.second+'秒后重新发送'))])],1),_c('el-form-item',[_c('el-button',{attrs:{\"type\":\"success\"},on:{\"click\":function($event){return _vm.login('ruleForm')}}},[_vm._v(\"登录\")]),_c('el-button',{on:{\"click\":function($event){return _vm.reset('ruleForm')}}},[_vm._v(\"重置\")])],1)],1)],1)])],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","// 此处用于存放所有用于登录相关的登录请求\r\n// 1.获取图形验证码\r\nimport request from '@/utils/request'\r\nexport const getPicCode = () => {\r\n  return request.get('/captcha/image')\r\n}\r\n// 2.获取短信验证码\r\nexport const getMsgCode = (captchaCode, captchaKey, mobile) => {\r\n  return request.post('/captcha/sendSmsCaptcha', {\r\n    form: {\r\n      captchaCode,\r\n      captchaKey,\r\n      mobile\r\n    }\r\n  })\r\n}\r\n// 3.登录接口\r\nexport const codeLogin = (mobile, smsCode) => {\r\n  return request.post('/passport/login', {\r\n    form: {\r\n      isParty: false,\r\n      partyData: {},\r\n      mobile,\r\n      smsCode\r\n    }\r\n  })\r\n}\r\n","<template>\r\n<el-container>\r\n  <el-header>\r\n    <el-page-header @back=\"$router.go(-1)\" content=\"登录页面\">\r\n</el-page-header>\r\n  </el-header>\r\n  <el-main>\r\n    <el-card shadow=\"hover\" class=\"box-card\">\r\n  <div slot=\"header\" style=\"line-height: 50px;\">\r\n    <h2>手机号登录</h2>\r\n    <span>未注册的手机号登陆后将会自动注册</span>\r\n  </div>\r\n  <div class=\"form\">\r\n    <el-form\r\n:label-position=\"labelPosition\"\r\n:model=\"formData\"\r\n:rules=\"rules\"\r\nref=\"ruleForm\"\r\nlabel-width=\"100px\">\r\n<el-form-item label=\"手机\" prop=\"mobile\">\r\n<el-input placeholder=\"请输入手机号\" v-model=\"formData.mobile\">\r\n</el-input>\r\n</el-form-item>\r\n<el-form-item label=\"图形验证码\" prop=\"picCode\">\r\n<el-input placeholder=\"请输入图形验证码\" v-model=\"formData.picCode\">\r\n</el-input>\r\n<el-image\r\n      @click=\"getPicCode\"\r\n      v-loading=\"loading\"\r\n      v-if=\"formData.picUrl\"\r\n      :src=\"formData.picUrl\"\r\n      style=\"width: 100px; height: 30px; position: absolute;\">\r\n    </el-image>\r\n</el-form-item>\r\n\r\n<el-form-item label=\"短信验证码\" prop=\"msgCode\">\r\n\r\n    <el-input placeholder=\"请输入短信验证码\" v-model=\"formData.msgCode\">\r\n</el-input>\r\n<el-button\r\ntype=\"text\"\r\n@click=\"getCode('ruleForm')\"\r\n:disabled=\"code\"\r\n>{{second===totalSecond?'获取验证码':second+'秒后重新发送'}}</el-button>\r\n\r\n</el-form-item>\r\n  <el-form-item>\r\n    <el-button type=\"success\" @click=\"login('ruleForm')\">登录</el-button>\r\n    <el-button @click=\"reset('ruleForm')\">重置</el-button>\r\n  </el-form-item>\r\n</el-form>\r\n  </div>\r\n</el-card>\r\n  </el-main>\r\n</el-container>\r\n</template>\r\n\r\n<script>\r\nimport { codeLogin, getMsgCode, getPicCode } from '@/api/login'\r\nexport default {\r\n  name: 'LoginIndex',\r\n  data () {\r\n    const validatePhone = (rule, value, callback) => {\r\n      if (!value) {\r\n        callback(new Error('手机号不能为空'))\r\n        console.log(this.formData.mobile)\r\n        console.log(value)\r\n        return false\r\n      } else {\r\n        if (!/^1[3~9]\\d{9}$/.test(this.formData.mobile)) {\r\n          callback(new Error('输入正确的手机号'))\r\n          return false\r\n        } else {\r\n          callback()\r\n          return true\r\n        }\r\n      }\r\n    }\r\n    const checkPicCode = (rule, value, callback) => {\r\n      if (!value) {\r\n        callback(new Error('验证码不能为空'))\r\n        return false\r\n      } else {\r\n        if (!/^\\w{4}$/.test(this.formData.picCode)) {\r\n          callback(new Error('输入正确的图形验证码'))\r\n          return false\r\n        } else {\r\n          callback()\r\n          return true\r\n        }\r\n      }\r\n    }\r\n    return {\r\n      formData: {\r\n        picCode: '', // 用户输入的图形验证码\r\n        picKey: '', // 将请求传递的图形验证码唯一标识\r\n        picUrl: '', // 储存图片地址\r\n        mobile: '', // 手机号\r\n        msgCode: ''\r\n      },\r\n      code: false,\r\n      totalSecond: 60, // 总秒数\r\n      second: 60, // 当前秒数\r\n      timer: null,\r\n      labelPosition: 'left',\r\n      loading: true,\r\n      rules: {\r\n        mobile: [\r\n          { validator: validatePhone, trigger: 'blur' }\r\n        ],\r\n        picCode: [\r\n          { validator: checkPicCode, trigger: 'blur' }\r\n        ]\r\n      }\r\n    }\r\n  },\r\n  async created () {\r\n    this.getPicCode()\r\n    this.loading = false\r\n  },\r\n  methods: {\r\n    // 重置表单\r\n    reset (ruleForm) {\r\n      this.$refs[ruleForm].resetFields()\r\n    },\r\n    // 获取图形验证码\r\n    async getPicCode () {\r\n      this.loading = true\r\n      const { data: { base64, key } } = await getPicCode()\r\n      this.formData.picUrl = base64\r\n      this.formData.picKey = key\r\n      console.log(this.formData.picUrl)\r\n      console.log(key)\r\n      this.loading = false\r\n      // 这种只能在组件内使用\r\n    },\r\n    // 校验手机号和图形验证码是否合法\r\n    // 通过校验返回True\r\n    // 不通过校验返回false\r\n    getCode (ruleForm) {\r\n      this.$refs[ruleForm].validate(async (valid) => {\r\n        if (!valid) {\r\n        // 获取需要验证表单的validate方法来判断输入内容是否正确\r\n        // 如果没通过校验则没必要往下走\r\n          console.log(valid)\r\n          this.$message.warning('请检查手机号和图形验证码是否正确')\r\n          return false\r\n        } else {\r\n          // 发送请求(如果响应的状态码非200,最好抛出一个promise错误,await只会等待成功的promise)\r\n          // 当目前没有定时器开着，且totalSecond和second一致才可以倒计时\r\n          this.code = true\r\n          if (!this.timer && this.second === this.totalSecond) {\r\n            this.timer = setInterval(() => {\r\n              this.second--\r\n              console.log('获取验证码')\r\n              if (this.second <= 0) {\r\n                clearInterval(this.timer)\r\n                this.code = false\r\n                this.timer = null // 重置定时器\r\n                this.second = this.totalSecond // 重置\r\n              }\r\n            }, 1000)\r\n          }\r\n          this.$message.success('短信已发送,注意查收')\r\n          await getMsgCode(this.formData.picCode, this.formData.picKey, this.formData.mobile)\r\n          // 获取短信验证码\r\n        }\r\n      })\r\n    },\r\n    // 登录\r\n    async login (ruleForm) {\r\n      this.$refs[ruleForm].validate(async (valid) => {\r\n        if (!valid) {\r\n          this.$message.warning('请输入正确的手机号和图形验证码')\r\n          return false\r\n        } else {\r\n          if (!/^\\d{6}$/.test(this.formData.msgCode)) {\r\n            this.$message.warning('请输入正确的手机验证码')\r\n            return false\r\n          }\r\n          const res = await codeLogin(this.formData.mobile, this.formData.msgCode)\r\n          this.$store.commit('user/setUserInfo', res.data)\r\n          console.log(res.data)\r\n          this.$message.success('登录成功')\r\n          // 进行判断,看地址栏有无回跳地址\r\n          // 1.如果有=>说明是其他页面,拦截到登陆来的,需要回跳\r\n          // 2.如果没有=>正常去首页\r\n          const url = this.$route.query.backUrl || '/'\r\n          this.$router.replace(url)\r\n        }\r\n      }\r\n      )\r\n    }\r\n  },\r\n  // 离开页面清除定时器\r\n  destroyed () {\r\n    clearInterval(this.timer)\r\n  }\r\n}\r\n\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.el-header{\r\n    color: #333;\r\n    text-align: center;\r\n    line-height: 60px;\r\n    .el-page-header{\r\n      line-height: 60px;\r\n    }\r\n  }\r\n  .el-main {\r\n    color: #333;\r\n    text-align: start;\r\n    height: calc(100vh - 120px);\r\n    .el-card{\r\n      position: absolute;\r\n    width: 80%;\r\n    left: 10%;\r\n    .form{\r\n\r\n      width: 80%;\r\n      .el-input{\r\n        width: 300px;\r\n      }\r\n      .el-input--small /deep/.el-input__inner{\r\n        width: 300px;\r\n      }\r\n    }\r\n    }\r\n  }\r\n</style>\r\n","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./loginIndex.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./loginIndex.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./loginIndex.vue?vue&type=template&id=c089491c&scoped=true\"\nimport script from \"./loginIndex.vue?vue&type=script&lang=js\"\nexport * from \"./loginIndex.vue?vue&type=script&lang=js\"\nimport style0 from \"./loginIndex.vue?vue&type=style&index=0&id=c089491c&prod&lang=less&scoped=true\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"c089491c\",\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_c","_self","attrs","on","$event","$router","go","staticClass","staticStyle","slot","_v","ref","labelPosition","formData","rules","model","value","mobile","callback","$$v","$set","expression","picCode","picUrl","directives","name","rawName","loading","getPicCode","_e","msgCode","code","getCode","_s","second","totalSecond","login","reset","staticRenderFns","request","get","getMsgCode","captchaCode","captchaKey","post","form","codeLogin","smsCode","isParty","partyData","data","validatePhone","rule","test","Error","console","log","checkPicCode","picKey","timer","validator","trigger","created","methods","ruleForm","$refs","resetFields","base64","key","validate","valid","$message","warning","setInterval","clearInterval","success","res","$store","commit","url","$route","query","backUrl","replace","destroyed","component"],"sourceRoot":""}